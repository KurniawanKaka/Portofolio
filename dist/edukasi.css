/*! tailwindcss v4.1.1 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
  @layer base {
    *, ::before, ::after, ::backdrop {
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-2xl: 42rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-sm: 8px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-sec: #182738;
    --color-merah: #ee6550;
    --color-kuning: #f0b65b;
    --color-birtu: #4381df;
    --color-biru: #45c0d9;
    --font-bebas: "Bebas Neue";
    --font-poppins: "Poppins ";
    --font-inter: "Inter ";
    --animate-naik: naik 1s ease-in;
    --animate-turun: turun 1s ease-in;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .inset-auto {
    inset: auto;
  }
  .-inset-x-full {
    inset-inline: -100%;
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-1\/2 {
    right: calc(1/2 * 100%);
  }
  .-bottom-\[57px\] {
    bottom: calc(57px * -1);
  }
  .bottom-9 {
    bottom: calc(var(--spacing) * 9);
  }
  .left-1 {
    left: calc(var(--spacing) * 1);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .-z-30 {
    z-index: calc(30 * -1);
  }
  .z-20 {
    z-index: 20;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-start-3 {
    grid-column-start: 3;
  }
  .col-start-4 {
    grid-column-start: 4;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .row-start-2 {
    grid-row-start: 2;
  }
  .row-start-3 {
    grid-row-start: 3;
  }
  .row-start-4 {
    grid-row-start: 4;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .table {
    display: table;
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-52 {
    height: calc(var(--spacing) * 52);
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-svh {
    height: 100svh;
  }
  .min-h-28 {
    min-height: calc(var(--spacing) * 28);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-96 {
    width: calc(var(--spacing) * 96);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .motion-scale-in {
    --motion-origin-scale-x: 50%;
    --motion-origin-scale-y: 50%;
    --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
    animation: var(--motion-all-loop-and-enter-animations);
  }
  .motion-scale-out {
    --motion-end-scale-x: 50%;
    --motion-end-scale-y: 50%;
    --motion-scale-out-animation: motion-scale-out calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
    animation: var(--motion-all-exit-animations);
  }
  .motion-opacity-in {
    --motion-origin-opacity: 0;
    --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
    animation: var(--motion-all-loop-and-enter-animations);
  }
  .motion-opacity-out {
    --motion-end-opacity: 0;
    --motion-opacity-out-animation: motion-opacity-out calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
    animation: var(--motion-all-exit-animations);
  }
  .motion-rotate-in {
    --motion-origin-rotate: 12deg;
    --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both;
    animation: var(--motion-all-loop-and-enter-animations);
  }
  .motion-rotate-out {
    --motion-end-rotate: 12deg;
    --motion-rotate-out-animation: motion-rotate-out calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both;
    animation: var(--motion-all-exit-animations);
  }
  .animate-naik {
    animation: var(--animate-naik);
  }
  .animate-turun {
    animation: var(--animate-turun);
  }
  .resize {
    resize: both;
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }
  .grid-rows-4 {
    grid-template-rows: repeat(4, minmax(0, 1fr));
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .bg-\[\#060a1a\] {
    background-color: #060a1a;
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-sec {
    background-color: var(--color-sec);
  }
  .bg-sec\/30 {
    background-color: color-mix(in srgb, #182738 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-sec) 30%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-linear-to-b {
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-linear-to-l {
    --tw-gradient-position: to left;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to left in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-linear-to-r {
    --tw-gradient-position: to right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-radial-\[at_50\%_100\%\] {
    --tw-gradient-position: at 50% 100%;
    background-image: radial-gradient(var(--tw-gradient-stops,at 50% 100%));
  }
  .from-birtu {
    --tw-gradient-from: var(--color-birtu);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-biru {
    --tw-gradient-from: var(--color-biru);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-kuning {
    --tw-gradient-from: var(--color-kuning);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-merah {
    --tw-gradient-from: var(--color-merah);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-sec {
    --tw-gradient-from: var(--color-sec);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-30\% {
    --tw-gradient-from-position: 30%;
  }
  .from-50\% {
    --tw-gradient-from-position: 50%;
  }
  .to-birtu {
    --tw-gradient-to: var(--color-birtu);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-biru {
    --tw-gradient-to: var(--color-biru);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-kuning {
    --tw-gradient-to: var(--color-kuning);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-merah {
    --tw-gradient-to: var(--color-merah);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-sec {
    --tw-gradient-to: var(--color-sec);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-69\% {
    --tw-gradient-to-position: 69%;
  }
  .to-100\% {
    --tw-gradient-to-position: 100%;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-7 {
    padding-inline: calc(var(--spacing) * 7);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .px-40 {
    padding-inline: calc(var(--spacing) * 40);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pr-7 {
    padding-right: calc(var(--spacing) * 7);
  }
  .pl-7 {
    padding-left: calc(var(--spacing) * 7);
  }
  .text-center {
    text-align: center;
  }
  .text-right {
    text-align: right;
  }
  .font-bebas {
    font-family: var(--font-bebas);
  }
  .font-poppins {
    font-family: var(--font-poppins);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-7xl {
    font-size: var(--text-7xl);
    line-height: var(--tw-leading, var(--text-7xl--line-height));
  }
  .text-8xl {
    font-size: var(--text-8xl);
    line-height: var(--tw-leading, var(--text-8xl--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .text-\[\#FFD6D6\] {
    color: #FFD6D6;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-300 {
    color: var(--color-blue-300);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .group-hover\:scale-103 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 103%;
        --tw-scale-y: 103%;
        --tw-scale-z: 103%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:from-birtu {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-birtu);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .group-hover\:from-biru {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-biru);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .group-hover\:from-kuning {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-kuning);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .group-hover\:to-sec {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-gradient-to: var(--color-sec);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .group-hover\:shadow-lg\/45 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-shadow-alpha: 45%;
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 45%)), 0 4px 6px -4px var(--tw-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 45%));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .group-hover\:shadow-lg\/100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-shadow-alpha: 100%;
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 100%)), 0 4px 6px -4px var(--tw-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 100%));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .group-hover\:inset-shadow-sm {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-inset-shadow: inset 0 2px 4px var(--tw-inset-shadow-color, rgb(0 0 0 / 0.05));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .group-hover\:shadow-blue-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-shadow-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) var(--tw-shadow-alpha), transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, var(--color-blue-500) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .group-hover\:shadow-cyan-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-shadow-color: color-mix(in srgb, oklch(71.5% 0.143 215.221) var(--tw-shadow-alpha), transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, var(--color-cyan-500) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .group-hover\:shadow-red-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-shadow-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) var(--tw-shadow-alpha), transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, var(--color-red-500) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .group-hover\:shadow-yellow-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-shadow-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) var(--tw-shadow-alpha), transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, var(--color-yellow-500) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .group-hover\:inset-shadow-red-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-inset-shadow-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) var(--tw-inset-shadow-alpha), transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-inset-shadow-color: color-mix(in oklab, var(--color-red-500) var(--tw-inset-shadow-alpha), transparent);
        }
      }
    }
  }
  .group-hover\:inset-shadow-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-inset-shadow-color: color-mix(in srgb, #fff var(--tw-inset-shadow-alpha), transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-inset-shadow-color: color-mix(in oklab, var(--color-white) var(--tw-inset-shadow-alpha), transparent);
        }
      }
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .max-md\:col-start-1 {
    @media (width < 48rem) {
      grid-column-start: 1;
    }
  }
  .max-md\:row-span-2 {
    @media (width < 48rem) {
      grid-row: span 2 / span 2;
    }
  }
  .max-md\:row-start-1 {
    @media (width < 48rem) {
      grid-row-start: 1;
    }
  }
  .max-md\:row-start-3 {
    @media (width < 48rem) {
      grid-row-start: 3;
    }
  }
  .max-md\:row-start-5 {
    @media (width < 48rem) {
      grid-row-start: 5;
    }
  }
  .max-md\:row-start-7 {
    @media (width < 48rem) {
      grid-row-start: 7;
    }
  }
  .max-md\:row-start-8 {
    @media (width < 48rem) {
      grid-row-start: 8;
    }
  }
  .max-md\:row-start-9 {
    @media (width < 48rem) {
      grid-row-start: 9;
    }
  }
  .max-md\:grid {
    @media (width < 48rem) {
      display: grid;
    }
  }
  .max-md\:hidden {
    @media (width < 48rem) {
      display: none;
    }
  }
  .max-md\:grid-cols-1 {
    @media (width < 48rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .max-md\:grid-rows-6 {
    @media (width < 48rem) {
      grid-template-rows: repeat(6, minmax(0, 1fr));
    }
  }
  .max-md\:gap-0\.5 {
    @media (width < 48rem) {
      gap: calc(var(--spacing) * 0.5);
    }
  }
  .max-md\:gap-2 {
    @media (width < 48rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .max-md\:gap-5 {
    @media (width < 48rem) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .max-md\:gap-10 {
    @media (width < 48rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .max-md\:gap-\[10px\] {
    @media (width < 48rem) {
      gap: 10px;
    }
  }
  .max-md\:px-1 {
    @media (width < 48rem) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .max-md\:px-2 {
    @media (width < 48rem) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .max-md\:px-10 {
    @media (width < 48rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .max-md\:text-2xl {
    @media (width < 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .max-md\:text-3xl {
    @media (width < 48rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .max-md\:text-sm {
    @media (width < 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .max-md\:text-xl {
    @media (width < 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
}
@import url("https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Poppins&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");
@layer base {
  :root {
    --motion-default-timing: cubic-bezier(.165, .84, .44, 1);
    --motion-bounce: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765,1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785,0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953,0.973, 1, 0.988, 0.984, 0.988, 1);
    --motion-spring-smooth: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
    --motion-spring-snappy: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
    --motion-spring-bouncy: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
    --motion-spring-bouncier: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
    --motion-spring-bounciest: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
  }
  * {
    --motion-origin-scale-x: 100%;
    --motion-origin-scale-y: 100%;
    --motion-origin-translate-x: 0%;
    --motion-origin-translate-y: 0%;
    --motion-origin-rotate: 0deg;
    --motion-origin-blur: 0px;
    --motion-origin-grayscale: 0%;
    --motion-origin-opacity: 100%;
    --motion-origin-background-color: ;
    --motion-origin-text-color: ;
    --motion-end-scale-x: 100%;
    --motion-end-scale-y: 100%;
    --motion-end-translate-x: 0%;
    --motion-end-translate-y: 0%;
    --motion-end-rotate: 0deg;
    --motion-end-blur: 0px;
    --motion-end-grayscale: 0%;
    --motion-end-opacity: 100%;
    --motion-end-background-color: ;
    --motion-end-text-color: ;
    --motion-loop-scale-x: 100%;
    --motion-loop-scale-y: 100%;
    --motion-loop-translate-x: 0%;
    --motion-loop-translate-y: 0%;
    --motion-loop-rotate: 0deg;
    --motion-loop-blur: 0px;
    --motion-loop-grayscale: 0%;
    --motion-loop-opacity: 100%;
    --motion-loop-background-color: ;
    --motion-loop-text-color: ;
    --motion-duration: 700ms;
    --motion-timing: var(--motion-default-timing);
    --motion-perceptual-duration-multiplier: 1;
    --motion-delay: 0ms;
    --motion-loop-count: infinite;
    --motion-scale-duration: var(--motion-duration);
    --motion-scale-timing: var(--motion-timing);
    --motion-scale-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-scale-delay: var(--motion-delay);
    --motion-scale-loop-count: var(--motion-loop-count);
    --motion-translate-duration: var(--motion-duration);
    --motion-translate-timing: var(--motion-timing);
    --motion-translate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-translate-delay: var(--motion-delay);
    --motion-translate-loop-count: var(--motion-loop-count);
    --motion-rotate-duration: var(--motion-duration);
    --motion-rotate-timing: var(--motion-timing);
    --motion-rotate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-rotate-delay: var(--motion-delay);
    --motion-rotate-loop-count: var(--motion-loop-count);
    --motion-filter-duration: var(--motion-duration);
    --motion-filter-timing: var(--motion-timing);
    --motion-filter-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-filter-delay: var(--motion-delay);
    --motion-filter-loop-count: var(--motion-loop-count);
    --motion-opacity-duration: var(--motion-duration);
    --motion-opacity-timing: var(--motion-timing);
    --motion-opacity-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-opacity-delay: var(--motion-delay);
    --motion-opacity-loop-count: var(--motion-loop-count);
    --motion-background-color-duration: var(--motion-duration);
    --motion-background-color-timing: var(--motion-timing);
    --motion-background-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-background-color-delay: var(--motion-delay);
    --motion-background-color-loop-count: var(--motion-loop-count);
    --motion-text-color-duration: var(--motion-duration);
    --motion-text-color-timing: var(--motion-timing);
    --motion-text-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-text-color-delay: var(--motion-delay);
    --motion-text-color-loop-count: var(--motion-loop-count);
    --motion-scale-in-animation: none;
    --motion-translate-in-animation: none;
    --motion-rotate-in-animation: none;
    --motion-filter-in-animation: none;
    --motion-opacity-in-animation: none;
    --motion-background-color-in-animation: none;
    --motion-text-color-in-animation: none;
    --motion-scale-out-animation: none;
    --motion-translate-out-animation: none;
    --motion-rotate-out-animation: none;
    --motion-filter-out-animation: none;
    --motion-opacity-out-animation: none;
    --motion-background-color-out-animation: none;
    --motion-text-color-out-animation: none;
    --motion-scale-loop-animation: none;
    --motion-translate-loop-animation: none;
    --motion-rotate-loop-animation: none;
    --motion-filter-loop-animation: none;
    --motion-opacity-loop-animation: none;
    --motion-background-color-loop-animation: none;
    --motion-text-color-loop-animation: none;
    --motion-all-enter-animations: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation);
    --motion-all-exit-animations: var(--motion-scale-out-animation), var(--motion-translate-out-animation), var(--motion-rotate-out-animation), var(--motion-filter-out-animation), var(--motion-opacity-out-animation), var(--motion-background-color-out-animation), var(--motion-text-color-out-animation);
    --motion-all-loop-animations: var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    --motion-all-loop-and-enter-animations: var(--motion-all-loop-animations), var(--motion-all-enter-animations);
  }
}
@layer base {
  @media screen and (prefers-reduced-motion: no-preference) {
    @keyframes motion-scale-in {
      0% {
        scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
      }
      100% {
        scale: 1 1;
      }
    }
    @keyframes motion-scale-out {
      0% {
        scale: 1 1;
      }
      100% {
        scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
      }
    }
    @keyframes motion-scale-loop-mirror {
      0%, 100% {
        scale: 1 1;
      }
      50% {
        scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
      }
    }
    @keyframes motion-scale-loop-reset {
      0% {
        scale: 1 1;
      }
      100% {
        scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
      }
    }
    @keyframes motion-translate-in {
      0% {
        translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
      }
      100% {
        translate: 0 0;
      }
    }
    @keyframes motion-translate-out {
      0% {
        translate: 0 0;
      }
      100% {
        translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
      }
    }
    @keyframes motion-translate-loop-mirror {
      0%, 100% {
        translate: 0 0;
      }
      50% {
        translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
      }
    }
    @keyframes motion-translate-loop-reset {
      0% {
        translate: 0 0;
      }
      100% {
        translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
      }
    }
    @keyframes motion-rotate-in {
      0% {
        rotate: var(--motion-origin-rotate);
      }
      100% {
        rotate: 0;
      }
    }
    @keyframes motion-rotate-out {
      0% {
        rotate: 0;
      }
      100% {
        rotate: var(--motion-end-rotate);
      }
    }
    @keyframes motion-rotate-loop-mirror {
      0%, 100% {
        rotate: 0deg;
      }
      50% {
        rotate: var(--motion-loop-rotate);
      }
    }
    @keyframes motion-rotate-loop-reset {
      100% {
        rotate: var(--motion-loop-rotate);
      }
    }
  }
  @keyframes motion-filter-in {
    0% {
      filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
    }
    100% {
      filter: blur(0) grayscale(0);
    }
  }
  @keyframes motion-filter-out {
    0% {
      filter: blur(0) grayscale(0);
    }
    100% {
      filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
    }
  }
  @keyframes motion-filter-loop-mirror {
    0%, 100% {
      filter: blur(0) grayscale(0);
    }
    50% {
      filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
    }
  }
  @keyframes motion-filter-loop-reset {
    0% {
      filter: blur(0) grayscale(0);
    }
    100% {
      filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
    }
  }
  @keyframes motion-opacity-in {
    0% {
      opacity: var(--motion-origin-opacity);
    }
  }
  @keyframes motion-opacity-out {
    100% {
      opacity: var(--motion-end-opacity);
    }
  }
  @keyframes motion-opacity-loop-mirror {
    50% {
      opacity: var(--motion-loop-opacity);
    }
  }
  @keyframes motion-opacity-loop-reset {
    100% {
      opacity: var(--motion-loop-opacity);
    }
  }
  @keyframes motion-background-color-in {
    0% {
      background-color: var(--motion-origin-background-color);
    }
  }
  @keyframes motion-background-color-out {
    100% {
      background-color: var(--motion-end-background-color);
    }
  }
  @keyframes motion-background-color-loop-mirror {
    50% {
      background-color: var(--motion-loop-background-color);
    }
  }
  @keyframes motion-background-color-loop-reset {
    100% {
      background-color: var(--motion-loop-background-color);
    }
  }
  @keyframes motion-text-color-in {
    0% {
      color: var(--motion-origin-text-color);
    }
  }
  @keyframes motion-text-color-out {
    100% {
      color: var(--motion-end-text-color);
    }
  }
  @keyframes motion-text-color-loop-mirror {
    50% {
      color: var(--motion-loop-text-color);
    }
  }
  @keyframes motion-text-color-loop-reset {
    100% {
      color: var(--motion-loop-text-color);
    }
  }
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@keyframes turun {
  0% {
    transform: translateY(-75px);
    opacity: 0;
  }
  100% {
    transform: translateY(0px);
    opacity: 100;
  }
}
@keyframes naik {
  0% {
    opacity: 0;
    transform: translateY(15px);
  }
  50% {
    opacity: 50;
    transform: translateY(-5px);
  }
  100% {
    opacity: 100;
    transform: translateY(0px);
  }
}
